Exp1: IP spoofing

Step 1: vstart pc1 –eth0=A 
OR
vstart pc1 --eth0 == A

Step 2: Assign IP addresses to PC1,PC2 and PC3 as 192.168.1.11, 192.168.1.12 and
192.168.1.13 respectivley.

ifconfig eth0 192.168.1.11

Step 3: Ping without address spoofing
ping pc1 to pc2 pc3
ping pc2 to pc1
ping pc3 to pc1
use command ping {ip of pc to be pinged}

Step 4:
Spoof the IP address of PC2 to create false identity by PC1
iptables -t nat -A POSTROUTING -p icmp -j SNAT --to-source 192.168.1.12

Step 5: Packets are caputred using tcpdump. As response will be sent from PC3 to
PC2, tcpdump command is executed on PC2 so that it can capture the reply
tcpdump -i any

Step 6: As tcpdump is in listening state on PC2 , we can ping PC3 from PC1 to
check to outocmes of IP spoofing attack.The ping command triggers ICMP Echo
Request packets to be sent to the destination IP address every one second. When a
computer receives an ICMP Echo Request it will reply with a ICMP Echo Reply.
tcpdump -i any icmp

Step 7: Due to IP spoofing attack done by PC1, for PC3 the ping request is from PC2
so reply which is given back is for PC2.

ARP SPOOFING:

arp spoofing:
install aprwatch
service arpwatch status
tail -f /var/log/syslog
ping--> Ping to any node on the same LAN. Here we ping to machine having IP address 192.168.36.101 Now 192.168.36.101 node has the IP adress and MAC address of your machine.
Now change the MAC address of your system using ifconfig command. Again ping again 
to 192.168.36.101 with this changed MAC address.-->sudo ifconfig enp1s0 hw ether 00:1a:ff:0a:e7:1b
again ping with same ip
ifconfig
/var/log/syslog



Exp2: squid proxy

Installation of SQUID:
Command : sudo apt-get install squid

cd /etc/squid

Change in visible proxy name

cp /etc/squid/squid.conf squid.conf.copy
mv /etc/squid/squid.conf

mv /etc/squid/squid.conf
/etc/squid/squid.conf.bkp root@apsit-HP-245-G4-Notebook-PC:~$ grep -ve ^# -ve
^$ /etc/squid/squid.conf.bkp > /etc/squid/squid.conf

Now, open the newly created squid.conf file, and look for (or add) the following ACL
elements and access lists.
acl localhost src 127.0.0.1/32
acl localnet src 192.168.0.40/24 192.168.0.0./16
http_access allow localnet
Verifying that a Client is Accessing the Internet
1. In your client, use a web browser to open any web site .
2. In the server, run following command line to view of requests being served through Squid.
root@apsit-HP-245-G4-Notebook-PC:/etc/squid$ sudo tail -f /var/log/squid/access.log

1. Define a new ACL directive as follows
acl resclient src 192.168.0.104
2. Add the ACL directive to the localnet access list that is already in place, but prefacing
it with an exclamation sign. This means, “Allow Internet access to clients matching the
localnet ACL directive except to the one that matches the resclient directive”.
http_access allow localnet !resclient



Exp3a:

sudo iptables -L

1-->Allow Established and Related Incoming Connections
sudo iptables -A INPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT

Allow Established Outgoing Connections
sudo iptables -A OUTPUT -m conntrack --ctstate ESTABLISHED -j ACCEPT

2-->Allow All Incoming SSH
iptables -A INPUT -p tcp --dport 22 -m conntrack --ctstate NEW,ESTABLISHED -j ACCEPT

iptables -A OUTPUT -p tcp --sport 22 -m conntrack --ctstate ESTABLISHED -j ACCEPT

3-->Allow outgoing SSH to Specific IP address or subnet
sudo iptables -A INPUT -p tcp -s 15.15.15.0/24 --dport 22 -m conntrack --ctstate NEW,ESTABLISHED -j ACCEPT
sudo iptables -A OUTPUT -p tcp --sport 22 -m conntrack --ctstate ESTABLISHED -j 
ACCEPT


4-->Allow Incoming Rsync from Specific IP Address or Subnet
iptables -A INPUT -p tcp -s 15.15.15.0/24 --dport 873 -m conntrack --ctstate
NEW,ESTABLISHED -j ACCEPT
iptables -A OUTPUT -p tcp --sport 873 -m conntrack –ctstate ESTABLISHED -j 
ACCEPT

5-->Allow All Incoming HTTP and HTTPS
iptables -A INPUT -p tcp -m multiport --dports 80,443 -m conntrack --ctstate
NEW,ESTABLISHED -j ACCEPT
iptables -A OUTPUT -p tcp -m multiport --dports 80,443 -m conntrack --ctstate 
ESTABLISHED -j ACCEPT


6-->Allow MySQL from Specific IP Address or Subnet
iptables -A INPUT -p tcp -s 15.15.15.0/24 --dport 3306 -m conntrack --ctstate
NEW,ESTABLISHED -j ACCEPT
iptables -A OUTPUT -p tcp --sport 3306 -m conntrack --ctstate ESTABLISHED -j 
ACCEPT


7-->Allow MySQL to Specific Network Interface
iptables -A INPUT -i eth1 -p tcp --dport 3306 -m conntrack --ctstate NEW,ESTABLISHED -j ACCEPT
iptables -A OUTPUT -o eth1 -p tcp --sport 3306 -m conntrack --ctstate ESTABLISHED -j 
ACCEPT




Exp3b:

Installing tcpdump:
# sudo apt-get install tcpdump

tcpdump -D : display all available interfaces
tcpdump -i wlo1 : capture traffic at the interface “wlo1”
tcpdump -i any : capture traffic at any interface  
tcpdump -i wlo1 port 80 : capture traffic at the interface “wlo1” on port 80
tcpdump -i wlo1 -c 5 : capture 5 packets at the interface “wlo1”
tcpdump -i wlo1 tcp : capture only tcp traffic at interface “wlo1”
tcpdump -i wlo1 src 192.168.43.169: capture traffic at interface “wlo1” with source IP 192.168.43.169

tcpdump -i wlo1 dst 192.168.43.169 : capture traffic at interface “wlo1” with destination IP 192.168.43.169

To capture only TCP SYN packets:
sudo tcpdump -i wlo1 "tcp[tcpflags] & (tcp-syn) != 0" >/home/apsit/Desktop/syn.txt

To capture only TCP ACK packets:
sudo tcpdump -i wlo1 "tcp[tcpflags] & (tcp-ack) != 0" >/home/apsit/Desktop/ack.txt

To capture only TCP FIN packets:
sudo tcpdump -i wlo1 "tcp[tcpflags] & (tcp-fin) != 0" >/home/apsit/Desktop/fin.txt

To capture only TCP SYN or ACK packets:
sudo tcpdump -r <interface> "tcp[tcpflags] & (tcp-syn|tcp-ack) != 0"

To capture ssh packet:
sudo tcpdump -i wlo1 -x -X -A -nvvv port 22 > ssh.txt
Ssh apsit@192.168.43.32

To capture telnet packet:
sudo tcpdump -i wlo1 -x -X -A -nvvv port 23 > telnet.txt
Telnet 192.168.43.32

Installing wireshark :
sudo apt-get install wireshark

Demonstration to capture telnet password using Wireshark:
1. Start capturing packets in Wireshark. While in process initiate a telnet connection."telnet 192.168.43.32" in terminal
Stop capturing by clicking the stop capturing button at the top in Wireshark

2. Since we want to here analyze telnet packets, in wireshark in filters, type telnet and the telnet packets captured will be displayed.
In the first line, we initiate the telnet connection to 192.168.43.32 from 192.168.43.169
In the second line, the connection requests for user login and password. We select this 
row and click on Analyze in top menu, select follow and then select TCP stream.
Note that the password is displayed along with the login information

3.We can capture ssh packets in the same way. While packet capturing is in progress, 
initiate ssh connection and later monitor the ssh connection from Wireshark.
If we analyze ssh packets, we will get something like below

Promiscuous mode can be enabled
Sudo ip link set wlo1 promisc on

Promiscuous mode can be disabled
Sudo ip link set wlo1 promisc off

netstat -i

Exp4: n map

sudo apt-get install nmap

To scan a single system: nmap -sP 192.168.43.32

To scan the entire subnet, then the command is
nmap target/subnetmask
nmap -sP 192.168.43.32/24

To scan a multiple targets, all you need to do is to separate each target via space:
nmap target target1 target2
nmap -sP 192.168.43.32 192.168.43.169

To see the list of all the hosts that are being scanned, then use the command with an -sL
parameter:
nmap -sL target/cdir
nmap -sL 192.168.43.32 192.168.43.169

To scan the entire subnet but not a specific IP addresses because it might be dangerous for us. In
this scenario, use the Nmap command with the excluding parameter:
IP address 192.168.43.32 is excluded in nmap scan.
nmap -sL 192.168.43.0/24 —exclude 192.168.43.32

To scan a specific port on the target machines
nmap -p 80,21,23 192.168.43.32

To know the open ports on target system:nmap -open 192.168.43.32
nmap -open 192.168.43.32

Scans the N highest-ratio ports found in nmap-services file:
nmap --top-ports 5 192.168.43.32

TCP SYN Scan (-sS)
nmap -sS 192.168.43.32

TCP connect() scan (-sT)
nmap -sT 192.168.43.32

UDP Scan (-sU)
nmap -sU 192.168.43.32

FIN Scan (-sF)
nmap -sF 192.168.43.32

Version Detection (-sV)
nmap -sV 192.168.43.169

Idle Scan (-sI)
nmap -sI zombie_host target_host

OS Detection by using Nmap
nmap -o 192.168.43.32



Exp6:snort

sudo apt-get install snort

Editing snort configuration files
sudo vi +45 /etc/snort/snort.conf

45th line Should look like this
ipvar HOME_NET 192.168.43.130/24

sudo vi +104 /etc/snort/snort.conf
Following the line at 104, make sure your paths look like this.
var RULE_PATH /etc/snort/rules
var SO_RULE_PATH /etc/snort/so_rules
var PREPROC_RULE_PATH /etc/snort/preproc_rules
var WHITE_LIST_PATH /etc/snort/rules/iplists
var BLACK_LIST_PATH /etc/snort/rules/iplists

sudo vi +545 /etc/snort/snort.conf
UN-comment the 545th line and make it look like this
include $RULE_PATH/local.rules


sudo gedit /etc/snort/rules/local.rules
empty
Add the rules
alert icmp any any -> $HOME_NET any (msg:”ICMP test”;sid:1000001; rev:1;)

Test Snort :
sudo snort -T -c /etc/snort/snort.conf

Test Snort :
sudo snort -T -c /etc/snort/rules/local.rules

start Snort in IDS mode and tell it to display alerts to the console:
sudo snort -A console -c /etc/snort/snort.conf
ping it from other system
As soon as the alert gets generated snort also creates log file of all the activity. Which can be seen in /var/log/snort path.

cat alert

Read log file
Sudo tcpdump -r snort.log.1665381601

Exp7:

Exp8: SQL Injection SQL Map

Website url: http://testphp.vulnweb.com/artists.php?artist=1

 install sqlmap use following command: sudo apt-get install sqlmap
sqlmap -h

 test a website for SQL Injection vulnerability
sqlmap -u (website url)
sqlmap -u (website url) –dbs

List information about Tables present in a particular Database
sqlmap -u (website url) -D acuart –tables

 find the column in the database
sqlmap -u (website url) -D acuart -T users –columns

To find username in uname
sqlmap -u (website url) -D acuart -T users -C uname –dump

Same with ‘pass’ instead of ‘uname’

Try login using found uname and pass on website

Exp9:

Exp10: hashing algo(md5,sha1)

cd /home/apsit/music
echo demo md5sum>example.txt
md5sum example.txt
echo Check msg integrity>example.txt

cat example.txt
md5sum example.txt

sha1sum example.txt
echo testing sha1>example.txt
sha1sum example.txt

Sha256sum example.txt
.     224
.     512
.     384

ls
md5sum ubuntu-14.04.5-desktop-amd64.iso


Exp11: Cryptool

Software Required : CrypTool 1.4.41

Exp12: RSA

Software Required : CrypTool 1.4.41



MAC spoofing 
create 2 hosts 
sudo apt-get install arpwatch 
arpwatch status
ping both host 

host 2
tail -f /var/log/syslog

host 1 
sudo ifconfig enp4s0 hw ether {mac add} 

ping to host 2 


John the ripper 

sodo apt-get install john 
john -test 
cd /etc 
ls
cd john
sudo adduser name 
touch 1.txt
nano 1.txt 
    add user name and save 
sudo cat /etc/shadow
john 1.txt 
john -show 1.txt 






